// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App tests should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="logo"
          className="App-logo"
          src="Star-Wars-Logo.png"
/>,
        <h1
          className="App-title"
>
          SwapiBox
</h1>,
        <ButtonContainer
          className="Btn-container"
          favorites={Array []}
          handleClickFavorites={[Function]}
          handleClickPeople={[Function]}
          handleClickPlanets={[Function]}
          handleClickVehicles={[Function]}
/>,
        <CardContainer
          favorites={Array []}
          handleClick={[Function]}
          peopleData={Array []}
          planetData={Array []}
          source=""
          vehicleData={Array []}
/>,
        <ScrollContainer
          className="scroll-container"
          movieData={Array []}
/>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "logo",
          "className": "App-logo",
          "src": "Star-Wars-Logo.png",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "SwapiBox",
          "className": "App-title",
        },
        "ref": null,
        "rendered": "SwapiBox",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "Btn-container",
          "favorites": Array [],
          "handleClickFavorites": [Function],
          "handleClickPeople": [Function],
          "handleClickPlanets": [Function],
          "handleClickVehicles": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "favorites": Array [],
          "handleClick": [Function],
          "peopleData": Array [],
          "planetData": Array [],
          "source": "",
          "vehicleData": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "scroll-container",
          "movieData": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="logo"
            className="App-logo"
            src="Star-Wars-Logo.png"
/>,
          <h1
            className="App-title"
>
            SwapiBox
</h1>,
          <ButtonContainer
            className="Btn-container"
            favorites={Array []}
            handleClickFavorites={[Function]}
            handleClickPeople={[Function]}
            handleClickPlanets={[Function]}
            handleClickVehicles={[Function]}
/>,
          <CardContainer
            favorites={Array []}
            handleClick={[Function]}
            peopleData={Array []}
            planetData={Array []}
            source=""
            vehicleData={Array []}
/>,
          <ScrollContainer
            className="scroll-container"
            movieData={Array []}
/>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "logo",
            "className": "App-logo",
            "src": "Star-Wars-Logo.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "SwapiBox",
            "className": "App-title",
          },
          "ref": null,
          "rendered": "SwapiBox",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "Btn-container",
            "favorites": Array [],
            "handleClickFavorites": [Function],
            "handleClickPeople": [Function],
            "handleClickPlanets": [Function],
            "handleClickVehicles": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "favorites": Array [],
            "handleClick": [Function],
            "peopleData": Array [],
            "planetData": Array [],
            "source": "",
            "vehicleData": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "scroll-container",
            "movieData": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
